name: Build Case Toggler

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  release:
    types: [published]

jobs:
  build:
    runs-on: windows-2022
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET Framework
      uses: microsoft/setup-msbuild@v2
      
    - name: Build Application
      shell: powershell
      run: |
        Set-ExecutionPolicy -ExecutionPolicy Bypass -Scope Process -Force
        Write-Host "Building Case Toggler..." -ForegroundColor Green
        Get-ChildItem -Force
        .\build.ps1
        if (!(Test-Path "CaseToggler.exe")) { 
          Write-Error "Build failed - executable not found"
          exit 1 
        }
        Write-Host "Build successful!" -ForegroundColor Green
      
    - name: Create dist directory
      run: |
        if (-not (Test-Path "dist")) {
          New-Item -ItemType Directory -Path "dist" -Force
          Write-Host "Created dist directory" -ForegroundColor Green
        }
      shell: powershell
      
    - name: Setup WiX Toolset
      shell: powershell
      run: |
        Write-Host "Setting up WiX Toolset..." -ForegroundColor Yellow
        
        # Check if WiX is already available in PATH
        $candleInPath = Get-Command candle.exe -ErrorAction SilentlyContinue
        if ($candleInPath) {
          $wixPath = Split-Path $candleInPath.Source
          Write-Host "Found WiX in PATH at: $wixPath" -ForegroundColor Green
        } else {
          # Check common installation paths for different versions
          $possiblePaths = @(
            "C:\Program Files (x86)\WiX Toolset v3.14\bin",
            "C:\Program Files\WiX Toolset v3.14\bin", 
            "C:\Program Files (x86)\WiX Toolset v3.11\bin",
            "C:\Program Files\WiX Toolset v3.11\bin",
            "C:\ProgramData\chocolatey\lib\wixtoolset\tools",
            "C:\ProgramData\chocolatey\bin"
          )
          
          $wixPath = $null
          foreach ($path in $possiblePaths) {
            Write-Host "Checking: $path" -ForegroundColor Gray
            if (Test-Path "$path\candle.exe") {
              $wixPath = $path
              Write-Host "Found WiX at: $wixPath" -ForegroundColor Green
              break
            }
          }
          
          if (-not $wixPath) {
            # Quick targeted search in likely directories only
            Write-Host "Searching Program Files..." -ForegroundColor Yellow
            $wixDirs = Get-ChildItem -Path "C:\Program Files*" -Name "*WiX*" -Directory -ErrorAction SilentlyContinue
            foreach ($dir in $wixDirs) {
              $testPath = "C:\Program Files\$dir\bin\candle.exe"
              if (Test-Path $testPath) {
                $wixPath = "C:\Program Files\$dir\bin"
                break
              }
              $testPath = "C:\Program Files (x86)\$dir\bin\candle.exe"  
              if (Test-Path $testPath) {
                $wixPath = "C:\Program Files (x86)\$dir\bin"
                break
              }
            }
          }
          
          if (-not $wixPath) {
            Write-Error "WiX Toolset not found. Please install WiX Toolset."
            exit 1
          }
        }
        
        echo "WIX_PATH=$wixPath" >> $env:GITHUB_ENV
        Write-Host "WiX Toolset ready at: $wixPath" -ForegroundColor Green
      
    - name: Build MSI Installer
      run: |
        $wixPath = $env:WIX_PATH
        Write-Host "Using WiX path: $wixPath" -ForegroundColor Yellow
        
        Write-Host "Building MSI installer..." -ForegroundColor Yellow
        
        # Compile WiX source
        & "$wixPath\candle.exe" "CaseToggler.wxs" -out "dist\CaseToggler.wixobj"
        if ($LASTEXITCODE -ne 0) {
          Write-Error "WiX compilation failed"
          exit 1
        }
        
        # Link to create MSI
        & "$wixPath\light.exe" "dist\CaseToggler.wixobj" -ext WixUIExtension -out "dist\CaseToggler-Setup-v1.0.0.msi"
        if ($LASTEXITCODE -ne 0) {
          Write-Error "WiX linking failed"
          exit 1
        }
        
        # Verify MSI was created
        if (-not (Test-Path "dist\CaseToggler-Setup-v1.0.0.msi")) {
          Write-Error "MSI creation failed - file not found"
          exit 1
        }
        
        Write-Host "MSI installer created successfully" -ForegroundColor Green
      shell: powershell
      
    - name: Upload Executable Artifact
      uses: actions/upload-artifact@v4
      with:
        name: CaseToggler-exe
        path: CaseToggler.exe
        
    - name: Upload MSI Installer Artifact
      uses: actions/upload-artifact@v4
      with:
        name: CaseToggler-msi-installer
        path: dist/CaseToggler-Setup-v1.0.0.msi
        
    - name: Generate Release Tag
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      id: tag
      shell: powershell
      run: |
        $timestamp = Get-Date -Format "yyyyMMdd-HHmmss"
        $tag = "v1.0.0-build-$timestamp"
        echo "tag=$tag" >> $env:GITHUB_OUTPUT
        echo "Generated tag: $tag"
        
    - name: Create Auto Release
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.tag.outputs.tag }}
        name: "Case Toggler ${{ steps.tag.outputs.tag }}"
        body: |
          ðŸš€ **Automated Release**
          
          This release was automatically created from the latest successful build.
          
          **What's included:**
          - `CaseToggler.exe` - The main application executable
          - `CaseToggler-Setup-v1.0.0.msi` - Windows installer package
          
          **Installation:**
          1. Download and run the MSI installer for easy installation
          2. Or download the EXE file to run directly
          
          **Usage:**
          - Run as administrator for global keyboard hooks
          - Use LEFT SHIFT shortcuts to toggle text case
          
          Built from commit: ${{ github.sha }}
        files: |
          CaseToggler.exe
          dist/CaseToggler-Setup-v1.0.0.msi
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Upload Executable to Manual Release
      if: github.event_name == 'release'
      uses: softprops/action-gh-release@v1
      with:
        files: |
          CaseToggler.exe
          dist/CaseToggler-Setup-v1.0.0.msi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}